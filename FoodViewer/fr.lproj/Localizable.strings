/* a space used for several purposes */
" " = " ";

/* a warning to check the brackets used, they are unbalanced */
" (WARNING: check brackets, they are unbalanced)" = "(Avertissement: contrôlez les accolades, il manque une)";

/* Title of first segment in switch, which lets the user select between per standard unit (per 100 mg/ml / per serving / per daily value) */
"100 mg/ml" = "100 mg/ml";

/* a questionmark used for several purposes */
"?" = "?";

/* String (in Segmented Control) to indicate the best nutritional score level */
"A" = "A";

/* Title of a button in normal state allowing the user to add a nutrient */
"Add Nutrient" = "Ajout nutriment";

/* Generic used string to indicate the additives of a product.
   Header title for the product additives section, i.e. the additives are derived from the ingredients list. */
"Additives" = "Additives";

/* TableViewController title for the allergen warnings setting scene. */
"Allergen warnings" = "Avertissements allergènes";

/* Header title for the product allergens section, i.e. the allergens derived from the ingredients.
   Text to indicate the allergens of a product. */
"Allergens" = "Allergènes";

/* ViewController title, which allows to set an image to a language and image category (front/ingredients/nutrition). */
"Assign Image" = "Assigne image";

/* Reason string in TouchID authenticate alert */
"Authenticate for OFF login" = "Authentifie pour OFF";

/* Explanatory text in AlertViewController, which lets the user enter his username/password. */
"Authentication with TouchID failed. Specify your password" = "Authentication avec TouchID échoué, spécifie ton mot de passe:";

/* String in Segmented Control to indicate the second best nutritional score level */
"B" = "B";

/* Header for a table sectionshowing the appreciations of the bad nutrients */
"Bad nutrients" = "Mauvais nutriments";

/* Tableview sectionheader for Barcode */
"Barcode" = "Code barre";

/* Title of ViewController with a list of all food products that has been viewed. */
"Beauty Products" = "Beauté";

/* Cell title indicating the product belongs to the beverages category */
"Beverages category" = "Bon nutriments";

/* Tableview sectionheader for brands. */
"Brands" = "Marques";

/* String in Segmented Control to indicate the thrid best nutritional score level */
"C" = "C";

/* Title of second segment in switch, which lets the user select between joule or calories */
"Calories" = "Calories";

/* Popover which allows to select an image. Title for barButton to cancel the selection
   String in button, to let the user indicate he does NOT want to search.
   String in button, to let the user indicate he wants to cancel username/password input. */
"Cancel" = "Annule";

/* Header title for table section with product Categories
   Text to indicate the product belongs to a category.
   Title of ViewController with the categories the product belongs to.
   Viewcontroller title for page with categories for product. */
"Categories" = "Catégories";

/* String in PickerViewController to indicate the checker role of a contributor */
"Checker" = "Controleur";

/* Cell title indicating the product belongs to the cheeses category */
"Cheeses category" = "Catégorie fromages";

/* Title of a button, which removes all items in the product search history. */
"Clear History" = "Efface histoire";

/* Tableview sectionheader for long product name */
"Common Name" = "Dénomination générique";

/* Title of view controller, with information on the community that has contributed to the product data.
   Viewcontroller title for page with community effort for product. */
"Community Effort" = "Effort communauté";

/* Header title of the tableview section, indicating whether the productdata is complete. */
"Completeness" = "Exhaustivité";

/* Label for a horizontal gauge that indicates the completion percentage of the product data. */
"Completion" = "Taux de complèté";

/* Generic string to indicate the completion states of a product. */
"Completion States" = "Etats de complétion";

/* String in PickerViewController to indicate the creator role of a contributor (any role) */
"Contributor" = "Contributeur";

/* Header title of the tableview section, indicating whether which users did contribute. */
"Contributors" = "Contributeurs";

/* String in PickerViewController to indicate the corrector role of a corrector */
"Corrector" = "Correcteur";

/* Generic string (plural) to indicate the countries where the product is sold. */
"Countries" = "Pays";

/* Header title of the tableview section, indicating when the product data was created. */
"Creation Date" = "Date création";

/* String in picker, which lets the user select the search result order. Order on the creation dates. */
"Creation date" = "Date de création";

/* String in PickerViewController to indicate the creator role of a contributor */
"Creator" = "Createur";

/* String in Segmented Control to indicate the fourth best nutritional score level */
"D" = "D";

/* Title of third segment in switch, which lets the user select between per daily value (per 100 mg/ml / per serving / per daily value) */
"Daily Value" = "Valeur journalière";

/* Description for NutritionData Daily Value per serving */
"Daily Values (per serving)" = "Apport Journ.";

/* String presented in a tagView if the data has been loaded */
"Data is loaded" = "Data chargé";

/* Title of a tableView section, which lets the user select display options */
"Display Prefs" = "Réglage afiichage";

/* String in button, to let the user indicate he is ready with username/password input. */
"Done" = "Fini";

/* String in Segmented Control to indicate the fifth best (and last) nutritional score level */
"E" = "E";

/* Title of viewcontroller which allows editing of the product in a webview. */
"Edit" = "Edité";

/* Title of view controller, which allows editing of the nutrients */
"Edit Nutrient" = "Modifie nutriment";

/* String in picker, which lets the user select the search result order */
"Edit date" = "Change ordre";

/* Added to a tableview section header to indicated the item has been editd.
   Description of the edited tags as will be uploaded */
"Edited" = "Edité";

/* String in PickerViewController to indicate the editor role of a contributor */
"Editor" = "Editeur";

/* Placeholder text for field where user should enter a city name. */
"Enter city name" = "Nom de la ville";

/* placeholder in a textField where the user can specify a search for contributors. */
"Enter contributor name to search for" = "Entre nom du contributeur à chercher";

/* Placeholder text for field where user should enter a country name. */
"Enter country name" = "Nom du pays";

/* The user can tap the button to enter a date. */
"Enter date" = "Entre date";

/* Placeholder text for field where user should enter a postal code. */
"Enter postal code" = "Code postal";

/* Placeholder text for field where user should enter a shop name. */
"Enter shop name" = "Nom du magasin";

/* Placeholder string to explain the purpose of a barcode search in a tableview cell */
"Enter start numbers of barcode." = "Entre barcode";

/* Placeholder text for field where user should enter a street name. */
"Enter street name" = "Nom de la rue";

/* String to indicate the date, when the product was created on OFF. */
"Entry Date" = "Date de creation";

/* No valid data has been received */
"Error: No valid data" = "Erreur: pas de données valides";

/* The JSON file is wrongly formatted. */
"Error: No verbose status" = "Erreur: pas de status verbose in json";

/* Error message when the json input file does not contain any information */
"Error: Not a valid OFF JSON" = "Erreur: pas un JSON valide";

/* Error message when the json input file does not contain any information */
"Error: Not a valid Search array" = "Erreur: pas un recherche valide";

/* A JSON status which is not supported. */
"Error: Other (>1) result status" = "Erreur: autre (>1) result status in json";

/* Probably a programming error. */
"Error: URL encoding failed" = "Erreur: encodage URL échoué";

/* Probably a programming error. */
"Error: URL is wrong somehow" = "Erreur: URL mal-formé";

/* Retrieved a json file that is no longer relevant for the app. */
"Error: URL not matched" = "Erreur: URL n'est plus rélévant";

/* Error to indicate that a file can not be read. */
"Error: file %@ not available" = "Erreur: fichier %@ pas disponible";

/* String in Segmented Control to indicate whether the corresponding tag should be EXCLUDED from the search.
   String to indicate whether the corresponding tags shlould exluded from the search */
"Exclude" = "Exclure";

/* Header title of the tableview section, indicating the most recent expiration date. */
"Expiration Date" = "Date limite d'utilisation";

/* Title of ViewController with a list of all food products that has been viewed. */
"Food Products" = "Alimentaire";

/* Viewcontroller title for page with images of the product */
"Gallery" = "Gallerie";

/* Header for a table section showing the appreciations of the good nutrients */
"Good nutrients" = "Bons nutriments";

/* Description of the hierarchy tags in the json */
"Hierarchy" = "Hierarchie";

/* Title for the view controller with the product image, title, etc.
   Viewcontroller title for page with product identification info. */
"Identification" = "Identification";

/* Title for the viewcontroller with an enlarged image
   Title for the ViewController with the image of the product ingredients.
   Title of the ViewController with package image of the nutritional values */
"Image" = "Photo";

/* String presented in a tagView if the image is available */
"Image is available" = "Image disponible";

/* String presented in a tagView if the image is currently being loaded */
"Image is being loaded" = "Chargement photo active";

/* String presented in a tagView if the image loading has failed */
"Image loading has failed" = "Chargement photo échoué";

/* String presented in a tagView if the image data contained no data */
"Image was empty" = "Photo vide";

/* String in Segmented Control to indicate whether the corresponding tag should be INCLUDED in the search.
   String to indicate whether the corresponding tags shlould included in the search */
"Include" = "Inclure";

/* String in PickerViewController to indicate the informer role of a contributor */
"Informer" = "Informeur";

/* Header title for the product ingredients section.
   Text to indicate the ingredients of a product.
   Title for the ViewController with the product ingredients.
   Viewcontroller title for page with ingredients for product. */
"Ingredients" = "Ingrédients";

/* Header title for the ingredients image section, i.e. the image of the package with the ingredients */
"Ingredients Image" = "Photo de la liste des ingrédients";

/* Generic string to indicate the origins of the ingredients */
"Ingredients Origin" = "Origine ingredients";

/* String presented in a tagView if nothing has happened yet */
"Initialized" = "Initialisé";

/* Description of the by OFF interpreted tags in the json */
"Interpreted" = "Interpreté";

/* Title of first segment in switch, which lets the user select between joule or calories */
"Joule" = "Joule";

/* Energy unit */
"Joule (J)" = "Joule (J)";

/* Generic string for labels on product
   Header title for the product labels section, i.e. images, logos, etc. */
"Labels" = "Labels, certifications, récompenses";

/* Tableview sectionheader for languages on product */
"Languages" = "Langues";

/* Generic string to indicate the last date the product was edited */
"Last Edit Date" = "Dernier date d'édition";

/* Header title of the tableview section, indicating when the product data was last edited. */
"Last edit Date" = "Dernière date de modif.";

/* String to indicate the level (score) of the product. */
"Level" = "Niveau";

/* Label to indicate whether any nutrients are indicated on the package */
"Listed on package?" = "Noté sur l'emballage?";

/* String presented in a tagView if there are more results available */
"Load more results" = "Charger plus";

/* Error message when the product failed to load. */
"Loading Failed" = "Chargement échoué";

/* Tableview sectionheader for main image of package. */
"Main Image" = "Photo du produit";

/* Generic string to indicate the manufaturer of the product. */
"Manufacturer" = "Producteur";

/* Header for section of tableView with a map of producer, origin and shop locations. */
"Map" = "Carte";

/* Title of a navigation bar, wich allows the user to adapt an image.
   Title of a toolbar of a popOver, wich allows the user to adapt an image. */
"Move/Scale" = "Bouge/adapte";

/* Tableview sectionheader for product name */
"Name" = "Nom du produit";

/* Text in a tableview cell, when no brands are available in the product data. */
"No brands indicated" = "Aucun marque indiqué";

/* String if no common name is available */
"No common name available" = "Nom generique pas disponible";

/* Title of cell when no expiration date is avalable */
"No expiration date" = "DLU pas disponible";

/* String presented in a tagView if no image is available */
"No image available" = "Photo pas disponible";

/* Tag indicating that no image in the correct language is available */
"No image in the right language" = "Pas de photo dans la bonne langue";

/* String if no name is available */
"No name available" = "Pas de nom disponible";

/* Text of Label, indicating that the product has no nutrients defined */
"No nutrients" = "Pas de nutriments";

/* Text to indicate that the history of products is empty. */
"No products listed" = "Pas de produits spécifiés";

/* String if no quantity is available */
"No quantity available" = "Pas des quantités disponible";

/* String in TableView section when a search is not defined. */
"No search defined" = "Recherche pas défini";

/* String in TableView section when a search is not yet carried out. */
"No search result" = "Pas encore de résultats";

/* Title for viewcontroller with detailed product images, when no title is given. */
"No title" = "Pas de titre";

/* Text in a pickerView, when no translated text is available */
"No translation" = "Pas de traduction";

/* Alert title, to indicate product should NOT be added */
"Nope" = "Beuh";

/* Generic text to indicate the nutrients of a product. */
"Nutrients" = "Nutriments";

/* Tableview header for the section with nutriments availability, i.e. whether the nutrients are on the package. */
"Nutriments Availability" = "Disponibilité nutriments";

/* Tableview header section for the list of nutritional facts
   Text to indicate the nutrition facts of a product.
   Title of the ViewController with the nutritional values */
"Nutrition Facts" = "Composition nutritionnelle";

/* Description for NutritionData per standard unit */
"Nutrition Facts (per 100g/100ml)" = "Comp. nutritionelle (par 100g/100ml)";

/* Description for NutritionData per serving */
"Nutrition Facts (per serving)" = "Comp. nutritionelle (par portion)";

/* Tableview header section for the image of the nutritional facts */
"Nutrition Facts Image" = "Photo des inform. nutritionnelles";

/* Header for a table section showing the search for nutritional score
   Viewcontroller title for page with explanation of the nutritional score of the product. */
"Nutritional Score" = "Score Nutritionelle";

/* Header for a table section showing the total results France */
"Nutritional Score France" = "Score Nutritionelle France";

/* Header for a table section showing the total results UK */
"Nutritional Score UK" = "Score Nutritionelle UK";

/* Viewcontroller title for page with nutritional facts for product. */
"Nutritional facts" = "Inform. nutritionnelles";

/* String in button, to let the user indicate he wants to start the search. */
"OK" = "OK";

/* String for the Activity Action Screen */
"Open in Safari" = "Ouvre dans Safari";

/* Title of a tableView section, which lets the user set the off account to use */
"OpenFoodFacts Account" = "Compte OpenFoodFacts";

/* Header for section of tableView with location(s) of ingredients. */
"Origin ingredient" = "Origine des ingrédients";

/* Description of the original tags in the json */
"Original" = "Original";

/* Gallery header text presenting the original images */
"Original Images" = "Images originaux";

/* String presented in a tagView if this is not the current product type */
"Other product type" = "Autre type de produit";

/* Generic string to indicate the packager codes. */
"Packager Code" = "Code emballeur";

/* Tableview sectionheader for packaging. */
"Packaging" = "Emballage";

/* String in textField placeholder, to show that the user has to enter his password */
"Password" = "Mot de passe";

/* Text of 1st segment of a SegmentedControl, indicating the model of the nutrient values, i.e. per standard 100g or 100 ml */
"Per 100 mg/ml" = "Par 100 mg/ml";

/* Text of 2nd segment of a SegmentedControl, indicating the model of the nutrient values, i.e. the values are indicated per serving */
"Per serving" = "Par portion";

/* Header title of tableview section, indicating period after opening for beauty products */
"Period After Opening" = "Période après ouverture";

/* Title in AlertViewController, which lets the user enter his username/password. */
"Personal Account" = "Compte personel";

/* Title of ViewController with a list of all food products that has been viewed. */
"Petfood Products" = "Animaux";

/* String in PickerViewController to indicate the photographer role of a contributor */
"Photographer" = "Photographe";

/* String in picker, which lets the user select the search result order. Order on the popularity. */
"Popularity" = "Popularité";

/* TableViewController title for the settings scene. */
"Preferences" = "Réglages";

/* Description of the prefixed corrected tags */
"Prefix corrected" = "Préfix corrigé";

/* Tableview header for the section per unit shown, i.e. whether the nutrients are shown per 100 mg/ml or per portion. */
"Presentation format" = "Format de présentation";

/* Header for section of tableView with codes for the producer (EMB 123456 or FR.666.666). */
"Producer Codes" = "Codes emballeurs";

/* Header for section of tableView with information of the producer (name, geographic location). */
"Producers" = "Producteurs";

/* Header title of tableview section, indicating the websites for the product */
"Product Websites" = "Sites produit";

/* Alert message, when the product could not be retrieved from Internet. */
"Product does not exist. Add?" = "Produit n'existe pas. Ajouter?";

/* String presented in a tagView if the product has been loaded */
"Product is loaded" = "Produit chargé";

/* String presented in a tagView if the product list has been loaded */
"Product list is loaded" = "Produits chargés";

/* String presented in a tagView if the product is currently being loaded */
"Product loading" = "En cours de charger produit";

/* String presented in a tagView if the product loading has failed */
"Product loading failed" = "Chargement produit échoué";

/* String in picker, which lets the user select the search result order. Order on the product names. */
"Product name" = "Nom produit";

/* Secction title, to indicate the product name does not exist */
"Product name missing" = "Nom produit manque";

/* String presented in a tagView if no product is available on OFF */
"Product not available" = "Produit pas disponible";

/* Where do I use this? */
"Product update failed" = "Maj produit échoué";

/* Where do I use this? */
"Product update succeeded" = "Maj produit réussi";

/* Header for section of tableView with Locations where the product was bought. */
"Purchase Locations" = "Endroits d'achat";

/* Generic string to indicate the address (street/city/postalcode/country) where the product was bought */
"Purchase address" = "Adresse d'achat";

/* Tableview sectionheader for size of package. */
"Quantity" = "Quantité";

/* String in button, to let the user indicate he wants to cancel username/password input.
   Title of a tableView section, which lets the user reset the history */
"Reset" = "Réinitialise";

/* Header for section of tableView with names of the stores where the product is sold. */
"Sale Stores" = "Magasins de vente";

/* Header for section of tableView with Countries where the product is sold. */
"Sales Countries" = "Pays de vente";

/* Text to indicate the sales countries of a product. */
"Sales countries" = "Pays de vente";

/* Title of first segment in switch, which lets the user select between salt or sodium */
"Salt" = "Sel";

/* Product name of the product shown at first start */
"Sample Product for Demonstration, the globally known M&M's" = "Produit de démonstration, les M&Ms connu globalement";

/* Title in cell with the saturated fat to all fat ratio */
"Saturated Fat to Total Fat ratio" = "Rapport Graisses Saturés sur Graisses Totals";

/* Prefix of a title of a Tableview controller */
"Search" = "Cherche";

/* Title of a Tableview controller, indicating the tableview shows search beauty products. */
"Search Beauty Products" = "Cherche prod. de béauté";

/* Title of a Tableview controller, indicating the tableview shows search food products. */
"Search Food Products" = "Cherche prod. d'aliment.";

/* Title of a Tableview controller, indicating the tableview shows search pet food products (note the width of the title is constrained). */
"Search PetFood" = "Cherche prod. anim.";

/* String to indicate the text, which will be used to search multiple fileds of a product. */
"Search Text" = "Texte à chercher";

/* String show to explain the purpose of a search field in a tableview cell */
"Search in name, generic name, label, brand." = "Cherche dans nom, nom générique, label, marque";

/* String presented in a tagView if the search query is currently being loaded */
"Search loading" = "Chargement recherche";

/* String presented in a tagView for the search query */
"Search query" = "Définition de recherche";

/* Indicating that a search has been defined */
"Search set up" = "Recherche définie";

/* Title of a Tableview controller, indicating a search is in progress. */
"Searching" = "Cherchant";

/* First element of a pickerView, where the user has to select a language.
   First element of a pickerView, where the user has to select a nutrient.
   Title of a viewcontroller where the user has to select an element in the picker. */
"Select" = "Choisis";

/* Title of a picker row where the user has to select an element in the picker. */
"Select Completion Status" = "Sélectionne état de complétion";

/* First item in a pickerView, indicating what the user should do */
"Select role" = "Choisit role";

/* Gallery header text presenting the selected front images */
"Selected Front Images" = "Photo du produit sélectionnées";

/* Gallery header text presenting the selected ingredients images */
"Selected Ingredients Images" = "Photos d'ingrédients sélectionnées";

/* Gallery header text presenting the selected nutrition images */
"Selected Nutrition Images" = "Photos de nutrition sélectionnées";

/* Title of second segment in switch, which lets the user select between per standard unit (per 100 mg/ml / per serving / per daily value) */
"Serving" = "Portion";

/* Tableview header for the section with the serving size, i.e. the amount one will usually take of the product. */
"Serving Size" = "Portion";

/* Title of second segment in switch, which  indicates the user can set another account */
"Set Account" = "Défini compte";

/* Title of third segment in switch, which lets the user select between salt or sodium */
"Sodium" = "Sodium";

/* Header for a table section showing the special categories */
"Special categories" = "Catégories speciaux";

/* Title in AlertViewController, which lets the user enter his username/password. */
"Specify password" = "Spécifie mot de passe";

/* Explanatory text in AlertViewController, which lets the user enter his username/password. */
"Specify your credentials for OFF?" = "Spécifie compte et mot de passe pour OFF";

/* Title in AlertViewController, which lets the user decide if he wants to start a search. */
"Start Search?" = "Commence Recherche?";

/* Generic string to indicate the stores where the product is sold. */
"Stores" = "Magasins";

/* Title for the view controller with information about the Supply Chain (origin ingredients, producer, shop, locations).
   Viewcontroller title for page with supply chain for product. */
"Supply Chain" = "Circuit logistique";

/* Alert title, to indicate product should be added */
"Sure" = "Dac";

/* An explanatory text in the common name field. */
"This sample product shows you how a product is presented. Slide to the following pages, in order to see more product details. Once you start scanning barcodes, you will no longer see this sample product." = "Ce produit de démonstration vous montre comment une produit est présenté. Passez au pages suivants pour voir plus de détails sur le produit. Quand vous commencez à scanner, ce produit sera supprimé.";

/* Header title for the product traces section, i.e. the traces are from products which are worked with in the factory and are indicated separate on the label.
   Text to indicate the traces of a product. */
"Traces" = "Traces";

/* Description of the interpreted tags in the json as translated by the taxonomy */
"Translated" = "Traduit";

/* String (in Segmented Control/Tag) to indicate the nutritional score level is undefined (and will not be used in the search) */
"Undefined" = "Pas defini";

/* String presented in a tagView if an image is being uploaded */
"Uploading image" = "Charger image";

/* Popover which allows to select an image. Title for barButton to use a selected image
   Title of a button in a navigation bar, which allows the user to adapt an image and use the result. */
"Use" = "Utilise";

/* String in textField placeholder, to show that the user has to enter his username. */
"Username" = "Nom du compte";

/* Title of a tableView section, which lets the user set warnings */
"Warnings" = "Avertissements";

/* Text in a TagListView, when tags are available the product data. */
"available" = "disponible";

/* Generic string to indicate the completion states of a product. */
"contributor name not set" = "nom contributeur pas défini";

/* Explanatory text in AlertViewController, which shows the intended search */
"for %@ in %@" = "pour %1$@ dans %2$@";

/* Standard weight unit. */
"gram (g)" = "gramme (g)";

/* Energy unit. */
"kcalories (kcal)" = "calories (kcal)";

/* Standard weight unit divided by million. */
"microgram (µm)" = "microgramme (µm)";

/* Standard weight unit divided by thousand. */
"milligram (mg)" = "milligramme (mg)";

/* Value of the creation date field, if no valid date is available. */
"no creation date available" = "pas de date de création disponible";

/* Value of the edit date field, if no valid date is available. */
"no edit date available" = "pas de date d'édition disponible";

/* Text in a TagListView, when no ingredients are available in the product data. */
"no ingredients specified" = "pas d'ingrédients spécifiés";

/* Text for language of product, when there is no language defined. */
"no language defined" = "pas de langue défini";

/* Text for productname, when no productname is available in the product data. */
"no name specified" = "pas de nom spécifié";

/* Text in a TagListView, when no nutrition data has been specified in the product data. */
"no nutrition data available" = "pas d'info nutritionnelles spécifiés";

/* Text in a TagListView, when no nutrition data has been specified in the product data. */
"no nutrition data indicated" = "pas d'info nutritionnelles spécifiés";

/* description() text if the nutrition data on the package is indicated per standard unit (100 g or 100 ml). */
"no nutrition data indicated per standard unit" = "info nutritionnelle indiqué par unité standard";

/* Text for an entry in a taglist, when no serving size is available. This is also indicated in a separate colour. */
"no serving size available" = "pas de portion spécifié";

/* tag of cell when no tags are available
   Text for a cell, when no status title has been provided, such as 'completed', etc.
   Text for language of product, when there is no language defined.
   Text in a TagListView, when the json provided an empty string.
   Unitless */
"none" = "aucun";

/* Text in a search TagListView, when tags can not be set up. */
"not searchable" = "pas recherchable";

/* Text of a button, indicating a contributor role is not selected */
"not selected" = "pas sélectionné";

/* Generic text if q vqlue hqs not yet been set. */
"not set" = "pas spécifié";

/* description() text if the nutrition data on the package is indicated per serving. */
"nutrition data indicated per serving" = "info nutritionnelle indiqué par portion";

/* Text in a TagListView, when no nutrition data is available on the package. */
"nutrition data not on package" = "pas de valeurs nutri sur emballage";

/* Text in a TagListView, when the nutrition data has been specified in the product data. */
"nutrition data per serving and standard unit available" = "info nutritionnelle disponible par portion et unité standard";

/* Text in a TagListView, when the nutrition data has been specified in the product data. */
"nutrition data per serving available" = "info nutritionnelle disponible par portion";

/* Text in a TagListView, when the nutrition data has been specified in the product data. */
"nutrition data per standard unit available" = "info nutritionnelle disponible par unité standard";

/* Fraction of total by volume */
"percentage (%)" = "pourcentage (%)";

/* Part of a sentece indicating the number of search results */
"search results" = "résultats de récherche";

/* tag of cell when no date was in off */
"undefined" = "non défini";

/* Text in a TagListView, when the field in the json was not present. */
"unknown" = "inconnu";

/* Image to indicate that the user who created the product. */
"❤️" = "❤️";

/* Image to indicate that the user who added information to the product. */
"💭" = "💭";

/* Image to indicate that the user who added or deleted information of the product. */
"📝" = "📝";

/* Image to indicate that the user took pictures of the product. */
"📷" = "📷";

/* Image to indicate that the user modified information of the product. */
"🔦" = "🔦";

