/* a space used for several purposes */
" " = "  ";

/* a warning to check the brackets used, they are unbalanced */
" (WARNING: check brackets, they are unbalanced)" = "(Avertissement: contr√¥lez les accolades, il manque une)";

/* a questionmark used for several purposes */
"?" = "?";

/* Image to indicate that the user who created the product. */
"‚ù§Ô∏è" = "‚ù§Ô∏è";

/* Image to indicate that the user who added information to the product. */
"üí≠" = "üí≠";

/* Image to indicate that the user who added or deleted information of the product. */
"üìù" = "üìù";

/* Image to indicate that the user took pictures of the product. */
"üì∑" = "üì∑";

/* Image to indicate that the user modified information of the product. */
"üî¶" = "üî¶";

/* Title of first segment in switch, which lets the user select between per standard unit (per 100 mg/ml / per serving / per daily value) */
"100 mg/ml" = "100 mg/ml";

/* String (in Segmented Control) to indicate the best nutritional score level */
"A" = "A";

/* Title of a button to indicate that the front image is missing. */
"Add Front Image" = "Ajout image frontal";

/* Title of a viewController where the users can add images for a new product. */
"Add images for new product" = "Ajout images nouveau produit";

/* Title of a viewcontroller which allows the user to add a new language to the product languages. */
"Add Language" = "Ajout langue";

/* Title of a button in normal state allowing the user to add a nutrient */
"Add Nutrient" = "Ajout nutriment";

/* Text to indicate the additives of a product. */
"Additives" = "Additives";

/* Text to indicate a specific additive. */
"Additve %@" = "Additive %@";

/* ViewController title, which allows the user to set alerts for products elements (allergens, traces, ingredients, nurtiscore, nova, labels. */
"Alert Preferences" = "Pr√©f√©rences avertissements";

/* TableViewController title for the allergen warnings setting scene. */
"Allergen warnings" = "Avertissements allerg√®nes";

/* Tag title for the number of allergens detected. */
"Allergens" = "Allerg√®nes";

/* title of a segment of a segmented control, which lets the user set the application to scan products continuously. */
"Allowed" = "Permis";

/* ViewController/row title, which allows the user to set up the application. */
"Application Preferences" = "Pr√©f√©rences appli";

/* Title of a table section header, which display the app version nnumber and build number. */
"Application version/build" = "Version/build appli";

/* ViewController title, which allows to set an image to a language and image category (front/ingredients/nutrition). */
"Assign Image" = "Assigne image";

/* Reason string in TouchID authenticate alert */
"Authenticate for OFF login" = "Authentifie pour OFF";

/* Explanatory text in AlertViewController, which lets the user enter his username/password. */
"Authentication with TouchID failed. Specify your password" = "Authentication avec TouchID √©chou√©, sp√©cifie ton mot de passe:";

/* Text in a TagListView, when tags are available the product data. */
"Available" = "Disponible";

/* String in Segmented Control to indicate the second best nutritional score level */
"B" = "B";

/* Header for a table sectionshowing the appreciations of the bad nutrients */
"Bad nutrients" = "Mauvais nutriments";

/* Tableview sectionheader for Barcode */
"Barcode" = "Code barre";

/* Tableview sectionheader for Barcode, with edited main language */
"Barcode (edited main language)" = "Code barre (√©dit√©)";

/* Tableview sectionheader for Barcode, with original main language */
"Barcode (non-edited main language)" = "Code barre (pas √©dit√©)";

/* Title of a segmented control. */
"Beauty" = "Beaut√©";

/* Placeholder string in a textfield to explain the purpose of a beauty product barcode search */
"Beauty  barcode." = "Code barre beaut√©";

/* Title of ViewController with a list of all food products that has been viewed. */
"Beauty Products" = "Produits de beaut√©";

/* Cell title indicating the product belongs to the beverages category */
"Beverages category" = "Cat√©gorie Boissons";

/* Tableview sectionheader for brands. */
"Brands" = "Marques";

/* Tableview sectionheader for the edited brands. */
"Brands (edited)" = "Marques (√©dit√©)";

/* Tableview sectionheader for the interpreted and normalised brands. */
"Brands (interpreted)" = "Marques (interpret√©)";

/* Tableview sectionheader for the unedited brands. */
"Brands (non-edited)" = "Marques (pas √©dit√©)";

/* Title of a segment of a segmented control, which lets the user set the button view toggle mode interface */
"Button" = "Bouton";

/* String in Segmented Control to indicate the thrid best nutritional score level */
"C" = "C";

/* Title of third segment in switch, which lets the user select between joule, kilo-calories or Calories */
"Calories" = "Calories";

/* String in button, to let the user indicate he does NOT want to search. */
"Cancel" = "Annule";

/* Text to indicate the product belongs to a category. */
"Categories" = "Cat√©gories";

/* Edited text to indicate the product belongs to a category. */
"Categories (edited)" = "Cat√©gories (√©dit√©)";

/* Original text to indicate the product belongs to a category. */
"Categories (non-edited)" = "Cat√©gories (pas √©dit√©)";

/* Original text to indicate the product belongs to a category. */
"Categories (normalized)" = "Cat√©gories (normalis√©)";

/* Original text to indicate the product belongs to a category. */
"Categories (translated)" = "Cat√©gories (traduit)";

/* Text to indicate a specific additive. */
"Category %@" = "Cat√©gorie %@";

/* String in PickerViewController to indicate the checker role of a contributor */
"Checker" = "Controleur";

/* Cell title indicating the product belongs to the cheeses category */
"Cheeses category" = "Cat√©gorie fromages";

/* Title of a button, which removes all items in the product search history. */
"Clear History" = "Efface histoire";

/* Tableview sectionheader for long product name */
"Common Name" = "D√©nomination g√©n√©rique";

/* Viewcontroller title for page with community effort for product. */
"Community Effort" = "Effort communaut√©";

/* Header title of the tableview section, indicating whether the productdata is complete. */
"Completeness" = "Exhaustivit√©";

/* Label for a horizontal gauge that indicates the completion percentage of the product data. */
"Completion" = "Ach√®vement";

/* Generic string to indicate the completion states of a product. */
"Completion States" = "Etats de compl√©tion";

/* Header of a table section, which allows the user to set a preference for continuous product scanning. */
"Continous Scan" = "Scan continu";

/* String in PickerViewController to indicate the creator role of a contributor (any role) */
"Contributor" = "Contributeur";

/* Header title of the tableview section, indicating whether which users did contribute. */
"Contributors" = "Contributeurs";

/* String in PickerViewController to indicate the corrector role of a corrector */
"Corrector" = "Correcteur";

/* Generic string (plural) to indicate the countries where the product is sold. */
"Countries" = "Pays";

/* Generic string (plural) to indicate the countries where the product is sold (edited). */
"Countries (edited)" = "Pays (√©dit√©)";

/* Generic string (plural) to indicate the countries where the product is sold (non-edited). */
"Countries (non-edited)" = "Pays (pas √©dit√©)";

/* Generic string (plural) to indicate the countries where the product is sold (normalized). */
"Countries (normalized)" = "Pays (normalis√©)";

/* Generic string (plural) to indicate the countries where the product is sold (translated). */
"Countries (translated)" = "Pays (traduit)";

/* Text to indicate the sales countries of a product. */
"Countries where sold" = "Pays de vente";

/* Title of a button, which opens a web-page that allows a user to create an OFF account. */
"Create OFF Account" = "Cr√©e compte OFF";

/* String in picker, which lets the user select the search result order. Order on the creation dates. */
"Creation date" = "Date de cr√©ation";

/* String in PickerViewController to indicate the creator role of a contributor */
"Creator" = "Createur";

/* Title of segment in segmentedControlto indicate the current local should be used. */
"Current Locale" = "Lieu actuel";

/* String in Segmented Control to indicate the fourth best nutritional score level */
"D" = "D";

/* Title of third segment in switch, which lets the user select between per daily value (per 100 mg/ml / per serving / per daily value) */
"Daily Value" = "Valeur journali√®re";

/* Description for NutritionData Daily Value per serving */
"Daily Values (per serving)" = "Apport Journ.";

/* String presented in a tagView if the data has been loaded */
"Data is loaded" = "Data charg√©";

/* Title of a table section, which allows the user to define the default energy unit (joules, calories, kilocalories). */
"Default energy unit" = "D√©faut unit√© √©nergie";

/* Title of a tableView section, which lets the user select between salt or sodium */
"Default for salt/sodium" = "D√©faut sel ou sodium";

/* Title of table view section which allows the user to set the reference for nutrition facts (serving or 100g). */
"Default nutrition facts style" = "Style par d√©faut tableau valeurs nutritionnelles";

/* Title of table view section which allows the user to set who defines the table format (user or product). */
"Default nutrition facts table style" = "D√©faut style valeurs nutritionnelles";

/* Title of a tableView section, which lets the user set the off account to use */
"Default OpenFoodFacts account" = "D√©faut compte OpenFoodFacts";

/* String to indicate a product has not yet been retrieved from OFF yet and is only locally available */
"Default product type" = "D√©faut type produit";

/* Title of abutton, which allows the user to view the details of a scanned product. */
"Details" = "D√©tails";

/* Text to indicate the detected additives of a product.
   Text to indicate the detected detected additives (normalized)  of a product. */
"Detected Additives" = "Additives d√©tect√©s";

/* Text to indicate the detected additives (translated) of a product. */
"Detected Additives (translated)" = "Additives d√©tect√©s (traduit)";

/* Text to indicate the detected allergens of a product. */
"Detected Allergens" = "Allerg√®nes d√©tect√©s";

/* Text to indicate the normalized detected allergens of a product. */
"Detected Allergens (normalized)" = "Allerg√®nes d√©tect√©s (normalis√©)";

/* Text to indicate the translated detected allergens of a product. */
"Detected Allergens (translated)" = "Allerg√®nes d√©tect√©s (traduit)";

/* Text to indicate the detected aminoacids of a product. */
"Detected Aminoacids" = "\t\nAcides amin√©s";

/* Text to indicate the normalized detected aminoacids of a product. */
"Detected Aminoacids (normalized)" = "Acides amin√©s (normalis√©)";

/* Text to indicate the translated detected aminoacids of a product. */
"Detected Aminoacids (translated)" = "Acides amin√©s (traduit)";

/* Tableview section header, which list the detected minerals in an ingredients list. */
"Detected Minerals" = "Min√©rales d√©tect√©s";

/* Tableview section header, which list the normalized detected minerals in an ingredients list. */
"Detected Minerals (normalized)" = "Min√©rales d√©tect√©s (normalis√©)";

/* Tableview section header, which list the translated detected minerals in an ingredients list. */
"Detected Minerals (translated)" = "Min√©rales d√©tect√©s (traduit)";

/* Tableview section header, which list the detected nucleotides in an ingredients list. */
"Detected Nucleotides" = "Nucl√©otides d√©tect√©s";

/* Tableview section header, which list the normalized detected nucleotides in an ingredients list. */
"Detected Nucleotides (normalized)" = "Nucl√©otides d√©tect√©s (normalis√©)";

/* Tableview section header, which list the translated detected nucleotides in an ingredients list. */
"Detected Nucleotides (translated)" = "Nucl√©otides d√©tect√©s (traduit)";

/* Tableview section header, which list the detected other nutritional substances in an ingredients list. */
"Detected Other Nutritional Substances" = "Autre Substances Nutritionnelles d√©tect√©s";

/* Tableview section header, which list the normalized detected other nutritional substances in an ingredients list. */
"Detected Other Nutritional Substances (normalized)" = "Autre Substances Nutritionnelles d√©tect√©s (normalis√©)";

/* Tableview section header, which list the translated detected other nutritional substances in an ingredients list. */
"Detected Other Nutritional Substances (translated)" = "Autre Substances Nutritionnelles d√©tect√©s (traduit)";

/* Tableview section header, which list the detected vitamins in an ingredients list. */
"Detected Vitamins" = "Vitamines d√©tect√©s";

/* Tableview section header, which list the normalized detected vitamins in an ingredients list. */
"Detected Vitamins (normalized)" = "Vitamines d√©tect√©s (normalis√©)";

/* Tableview section header, which list the translated detected vitamins in an ingredients list. */
"Detected Vitamins (translated)" = "Vitamines d√©tect√©s (traduit)";

/* Title of a tableView, which shows how well a product conforms to a set of diet profiles. */
"Diet Compliancy" = "Information r√©gimes";

/* Title of a button in an alert sheet, which allows the user to discard alle changes to the local product. */
"Discard" = "Jeter?";

/* Title of a viewController, which lets the user select product display options (salt vs sodium), kJoule or kcal, etc */
"Display Preferences" = "Pr√©f√©rences Affichage";

/* Title of a table section, which lets the user select nutrient display option (per 100 mg or serving */
"Display Unit" = "Unit√© d'affichage";

/* Title of a table section, which lets the user select nutrient display option (per 100 mg or serving */
"Display Unit (edited)" = "Unit√© d'affichage (√©dit√©)";

/* SegmentedControl index tezt for a preference setting, which ask the user to set the default for ingredient detections (additives, minerals etc). Should the app also show when nothing has been detected? */
"Do Not Show" = "Pas montrer";

/* String in button, to let the user indicate he is ready with username/password input. */
"Done" = "Fini";

/* Title of a segment of a segmented control, which lets the user set doubletap view toggle mode interface */
"Doubletap" = "Double tap";

/* String in Segmented Control to indicate the fifth best (and last) nutrition score level */
"E" = "E";

/* Title of viewcontroller which allows editing of the product in a webview. */
"Edit" = "Edit√©";

/* String in picker, which lets the user select the search result order */
"Edit date" = "Change ordre";

/* String in PickerViewController to indicate the editor role of a contributor */
"Editor" = "Editeur";

/* Placeholder string in a textfield to explain the purpose of a beauty product barcode search */
"Enter beauty product barcode." = "Saisis code barre produit beaut√©";

/* Placeholder in a textField, where a user can enter characters to filter a list. */
"Enter characters to filter the list." = "Saisis caract√®res pour filtrer ";

/* Placeholder text for field where user should enter a city name. */
"Enter city name" = "Saisis nom de la ville";

/* placeholder in a textField where the user can specify a search for contributors. */
"Enter contributor name to search for" = "Saisis nom du contributeur";

/* Placeholder text for field where user should enter a country name. */
"Enter country name" = "Saisis nom du pays";

/* The user can tap the button to enter a date. */
"Enter date" = "Saisis date";

/* Placeholder string in a textfield to explain the purpose of a food product barcode search */
"Enter food product barcode." = "Saisir le code barre produit alimentaire";

/* Placeholder string in a textfield to explain the purpose of a petfood barcode search */
"Enter petfood product barcode." = "Saisir le code barre produit pour animaux";

/* Placeholder text for field where user should enter a postal code. */
"Enter postal code" = "Code postal";

/* Placeholder string in a textfield to explain the purpose of a product barcode search */
"Enter product barcode." = "Saisis code barre produit";

/* Placeholder text for field where user should enter a shop name. */
"Enter shop name" = "Saisir le nom du magasin";

/* Placeholder text for field where user should enter a street name. */
"Enter street name" = "Saisir le nom de la rue";

/* Placeholder text of a textView for the generic product name. */
"Enter the generic name of the product" = "Saisir le nom g√©n√©rique";

/* Placeholder text of a textView for the ingredients. */
"Enter the ingredients of the product" = "Ingr√©dients";

/* Placeholder text of a textView for the product name. */
"Enter the name of the product" = "Saisir le nom du produit";

/* String to indicate the date, when the product was created on OFF. */
"Entry Date" = "Date de cr√©ation";

/* String of a button, to prefill the nutrients with the standard EU set. */
"EU Set" = "UE";

/* String in Segmented Control to indicate whether the corresponding tag should be EXCLUDED from the search. */
"Exclude" = "Exclure";

/* Header title of the tableview section, indicating the most recent expiration date. */
"Expiration Date" = "Date limite d'utilisation";

/* Header title of the tableview section, indicating the edited most recent expiration date. */
"Expiration Date (edited)" = "Date limite d'utilisation (√©dit√©)";

/* Header title of the tableview section, indicating the non-edited most recent expiration date. */
"Expiration Date (non-edited)" = "Date limite d'utilisation (pas √©dit√©)";

/* Text of a label that wil indicate the fat level (low/medium/high) by colour. */
"Fat level" = "Taux de graisse";

/* Cell title indicating the product belongs to the fats category */
"Fats category" = "Cat√©gorie Graisses et Huiles";

/* Title of SegmentedControl segment. */
"Food" = "Aliments";

/* Placeholder string in a textfield to explain the purpose of a food product barcode search */
"Food barcode." = "Code barre animalier";

/* Title of ViewController with a list of all food products that has been viewed. */
"Food Products" = "Alimentaire";

/* Explanatory text in AlertViewController, which shows the intended search */
"for %@ in %@" = "pour %1$@ dans %2$@";

/* Title for the viewcontroller with the front image */
"Front Image" = "Image frontale";

/* Title for the viewcontroller with the edited front image */
"Front Image (edited)" = "Image frontale (√©dit√©)";

/* Title for the viewcontroller with the original front image */
"Front Image (non-edited)" = "Image frontale (pas √©dit√©)";

/* Viewcontroller title for page with images of the product */
"Gallery" = "Gallerie";

/* Tableview sectionheader for the edited long product name */
"Generic Name (edited)" = "Nom g√©n√©rique (√©dit√©)";

/* Tableview sectionheader for the original long product name */
"Generic Name (non-edited)" = "Nom g√©n√©rique (pas √©dit√©)";

/* Standard weight unit. */
"gram (g)" = "gramme (g)";

/* Title of the secnd Tabbar item of a TabBarVC */
"History" = "Histoire";

/* Title for the view controller with the product image, title, etc. */
"Identification" = "Identification";

/* Title for the viewcontroller with an enlarged image */
"Image" = "Photo";

/* Table Section Header with dates of the images */
"Image Dates" = "Dates photos";

/* String presented in a tagView if the image is currently being loaded */
"Image is being loaded" = "Chargement photo active";

/* String presented in a tagView if the image loading has failed */
"Image loading has failed" = "Chargement photo √©chou√©";

/* String presented in a tagView if the image data contained no data */
"Image was empty" = "Photo vide";

/* String in Segmented Control to indicate whether the corresponding tag should be INCLUDED in the search. */
"Include" = "Inclure";

/* String in PickerViewController to indicate the informer role of a contributor */
"Informer" = "Informeur";

/* Text to indicate a specific ingredient. */
"Ingredient %@" = "Ingr√©dient %@";

/* Text to indicate the ingredients of a product. */
"Ingredients" = "Ingr√©dients";

/* Text to indicate the edited ingredients of a product.
   Text to indicate the hierarchy translated ingredients of a product. */
"Ingredients (edited)" = "Ingr√©dients (√©dit√©)";

/* Text to indicate the edited ingredients of a product. */
"Ingredients (hierarchy)" = "Ingr√©dients (hi√´rarchie)";

/* Text to indicate the original (unedited) ingredients of a product. */
"Ingredients (non-edited)" = "Ingr√©dients (pas √©dit√©)";

/* Text to indicate the normalized ingredients of a product. */
"Ingredients (normalized)" = "Ingr√©dients (normalis√©)";

/* Text to indicate the translated ingredients of a product. */
"Ingredients (translated)" = "Ingr√©dients (traduit))";

/* Header title for the ingredients image section, i.e. the image of the package with the ingredients */
"Ingredients Image" = "Photo ingr√©dients";

/* Header title for the edited ingredients image section, i.e. the image of the package with the ingredients */
"Ingredients Image (edited)" = "Photo ingr√©dients (√©dit√©)";

/* Header title for the original ingredients image section, i.e. the image of the package with the ingredients */
"Ingredients Image (non-edited)" = "Photo ingr√©dients (pas √©dit√©)";

/* Text in a tag when a new/edited product is seen. */
"Ingredients will be analysed after upload by OFF" = "Ingr√©dients seront analys√©s apr√®s t√©l√©chargement par OFF";

/* String presented in a tagView if nothing has happened yet */
"Initialized" = "Initialis√©";

/* Title of first segment in switch, which lets the user select between joules, kilo-calories or Calories */
"Joules" = "Joules";

/* Title of viewController, which shows the json as is available on OFF. */
"Json" = "JSON";

/* Title of second segment in switch, which lets the user select between joule, kilo-calories or Calories */
"Kilocalories" = "Kilocalories";

/* Generic string for labels on product */
"Labels" = "Labels, certifications, r√©compenses";

/* Tableview header string for edited labels on product */
"Labels (edited)" = "Labels, certifications, r√©compenses (√©dit√©)";

/* Tableview header string for original (unedited) labels on product */
"Labels (non-edited)" = "Labels, certifications, r√©compenses (pas √©dit√©)";

/* Tableview header string for original (normalized) labels on product */
"Labels (normalized)" = "Labels, certifications, r√©compenses (normalis√©)";

/* Tableview header string for original (translated) labels on product */
"Labels (translated)" = "Labels, certifications, r√©compenses (traduit)";

/* Tableview sectionheader for languages on product */
"Languages" = "Langues";

/* Generic string to indicate the last date the product was edited */
"Last Edit Date" = "Derni√®re date d'√©dition";

/* String to indicate the level (score) of the product. */
"Level" = "Niveau";

/* Label to indicate whether any nutrients are indicated on the package */
"Listed on package?" = "Not√© sur l'emballage?";

/* String presented in a tagView if there are more results available */
"Load more results" = "Charger plus";

/* Message as tag when the search is loading. */
"Loading" = "Cherchant";

/* Error message when the product failed to load. */
"Loading Failed" = "Chargement √©chou√©";

/* Tableview sectionheader for main image of package. */
"Main Image" = "Photo du produit";

/* Generic string to indicate the manufaturer of the product. */
"Manufacturer" = "Producteur";

/* Standard weight unit divided by million. */
"microgram (¬µm)" = "microgramme (¬µm)";

/* Standard weight unit divided by thousand. */
"milligram (mg)" = "milligramme (mg)";

/* Title of a navigation bar, wich allows the user to adapt an image. */
"Move/Scale" = "Bouge/adapte";

/* Tableview sectionheader for product name */
"Name" = "Nom du produit";

/* Tableview sectionheader for the edited product name */
"Name (edited)" = "Nom du produit (√©dit√©)";

/* Tableview sectionheader for the original (non-edited) product name */
"Name (non-edited)" = "Nom du produit (pas √©dit√©)";

/* Tableview sectionheader for a preference setting, which ask the user to set the default for ingredient detections (additives, minerals etc). Should the app also show when nothing has been detected? */
"Negative Ingredient Detections" = "D√©tections n√©gatives ingr√©dients";

/* Text in a tableview cell, when no brands are available in the product data. */
"No brands indicated" = "Aucun marque indiqu√©";

/* Text in a tableview cell, when no category is defined. */
"No category defined" = "pas de cat√©gorie d√©fini";

/* Text for language of product, when there is no country defined. */
"no country defined" = "pas de pays d√©fini";

/* Value of the creation date field, if no valid date is available. */
"no creation date available" = "pas de date de cr√©ation disponible";

/* Title of a viewController, when no diet has been selected. */
"no diet selected" = "Aucun r√©gime s√©lectionn√©";

/* Value of the edit date field, if no valid date is available. */
"no edit date available" = "pas de date d'√©dition disponible";

/* Title of cell when no expiration date is avalable */
"No expiration date" = "DLU non disponible";

/* String if no generic name is available */
"No generic name available" = "Pas de nom g√©n√©rique dispo";

/* String presented in a tagView if no image is available */
"No image available" = "Photo pas disponible";

/* Tag indicating that no image in the correct language is available */
"No image in the right language" = "Pas de photo dans la bonne langue";

/* Text in a TagListView, when no ingredients are available in the product data. */
"no ingredients specified" = "pas d'ingr√©dients sp√©cifi√©s";

/* Text for language of product, when there is no language defined. */
"no language defined" = "pas de langue d√©finie";

/* String when no diet matches have been found. */
"No matches for this level detected" = "Pas des correspondances";

/* Text for productname, when no productname is available in the product data. */
"no name specified" = "pas de nom sp√©cifi√©";

/* Text of Label, indicating that the product has no nutrients defined */
"No nutrients" = "Pas de nutriments";

/* Text of Label, indicating that the product has no nutrients (edited) defined */
"No nutrients (edited)" = "Pas de nutriments (√©dit√©)";

/* Text of Label, indicating that the product has no nutrients (original) defined */
"No nutrients (non-edited)" = "Pas de nutriments (pas √©dit√©)";

/* Text in a TagListView, when no nutrition data has been specified in the product data. */
"no nutrition data available" = "pas d'info nutritionnelle sp√©cifi√©e";

/* Text in a TagListView, when no nutrition data has been specified in the product data. */
"no nutrition data indicated" = "pas d'info nutritionnelle sp√©cifi√©e";

/* Text to indicate that the history of products is empty. */
"No products listed" = "Pas de produits sp√©cifi√©s";

/* String if no quantity is available */
"No quantity available" = "Pas de quantit√©s disponibles";

/* String presented in a tagView if the site did not respond */
"No reponse" = "Pas de r√©ponse";

/* String in TableView section when a search is not defined. */
"No search defined" = "Requ√™te non d√©finie";

/* String in TableView section when a search is not yet carried out. */
"No search result" = "Pas encore de r√©sultats";

/* Text for an entry in a taglist, when no serving size is available. This is also indicated in a separate colour. */
"no serving size available" = "pas de portion sp√©cifi√©e";

/* Title for viewcontroller with detailed product images, when no title is given. */
"No title" = "Pas de titre";

/* Text for language of product, when there is no trace defined. */
"no trace defined" = "pas de trace d√©finie";

/* Text in a pickerView, when no translated text is available */
"No translation" = "Pas de traduction";

/* Text for a cell, when no status title has been provided, such as 'completed', etc. */
"none" = "aucun";

/* First element of a pickerView where the user has to select an element in the picker. */
"None selected" = "Rien s√©lectionn√©";

/* Alert title, to indicate product should NOT be added */
"Nope" = "Beuh";

/* title o a segment of a segmented control, which prohibits the user to set the application to scan products continuously. */
"Not allowed" = "Pas permis";

/* Generic text if an action has not yet been done. */
"Not done" = "Pas fait";

/* Text in a TagListView, when the json provided an empty string. */
"Not filled" = "Pas saisi";

/* Text in a search TagListView, when tags can not be set up. */
"Not searchable" = "Pas recherchable";

/* Text of a button, indicating a contributor role is not selected */
"not selected" = "Pas saisi";

/* Generic text if a value has not yet been set. */
"Not set" = "Pas d√©finie";

/* Title of a viewController when no product/search has been selected. */
"nothing selected" = "Rien s√©lectionn√©";

/* Text above the nova value. */
"NOVA" = "NOVA";

/* Title of a table section, which shows the nova evaluation tags for ingredients, additives and categories. */
"Nova Evaluation Triggers" = "D√©clencheurs NOVA";

/* Tag text to indicate that nutrient data for the named nutrient %@ is unavailable. */
"Nutrient data for %@ unavailable" = "Valeurs pour %@ non disponibles";

/* Tag text to indicate that nutrient data is unavailable. */
"Nutrient data unavailable" = "Valeurs nutritionnelles non disponibles";

/* Generic text to indicate the nutrients of a product. */
"Nutrients" = "Nutriments";

/* Tableview header for the section with nutriments availability, i.e. whether the nutrients are on the package. */
"Nutriments Availability" = "Disponibilit√© nutriments";

/* Text to indicate that the nutriscore is not applicable to this product (type). */
"NutriScore not Applicable" = "Nutri-Score pas applicable";

/* Text to indicate that the nutriscore can not be calculated due to missing data. */
"NutriScore not calculable" = "Nutri-Score ind√©terminable";

/* Text in a TagListView, when no nutrition data is available on the package. */
"nutrition data not on package" = "pas de valeurs nutri sur l'emballage";

/* Text in a TagListView, when the nutrition data has been specified in the product data. */
"nutrition data per serving and standard unit available" = "info nutritionnelle disponible par portion et unit√© standard";

/* Text to indicate the nutrition facts of a product. */
"Nutrition Facts" = "Composition nutritionnelle";

/* Text to indicate the edited nutrition facts of a product. */
"Nutrition Facts (edited)" = "Composition nutritionnelle (√©dit√©)";

/* Text to indicate the original nutrition facts of a product. */
"Nutrition Facts (non-edited)" = "Composition nutritionnelle (pas √©dit√©)";

/* Description for NutritionData per one kilogram */
"Nutrition Facts (per 1 kg)" = "Comp. nutritionnelle (par kg)";

/* Description for NutritionData per standard unit */
"Nutrition Facts (per 100g/100ml)" = "Comp. nutritionnelle (pour 100g/100ml)";

/* Description for NutritionData per serving */
"Nutrition Facts (per serving)" = "Comp. nutritionnelle (par portion)";

/* Tableview header section for the image of the nutritional facts */
"Nutrition Facts Image" = "Photo des infos nutritionnelles";

/* Tableview header section for the edited image of the nutritional facts */
"Nutrition Facts Image (edited)" = "Photo info nutritionnelles (√©dit√©)";

/* Tableview header section for the original image of the nutritional facts */
"Nutrition Facts Image (non-edited)" = "Photo info nutritionnelles (pas √©dit√©)";

/* Header page that shows the various nutritional scores for the product */
"Nutrition Scores" = "√âvaluations nutritionnelles";

/* Header for a table section showing the total results France calculated by FoodViewer */
"Nutritional Score France (FV)" = "Nutri-Score (FV)";

/* Header for a table section showing the total results France calculated by OFF */
"Nutritional Score France (OFF)" = "Nutri-Score (OFF)";

/* Header for a table section showing the total results UK calculated by FoodViewer */
"Nutritional Score UK (FV)" = "Score nutritionnel Royaume-Uni (FV)";

/* Header for a table section showing the total results UK calculated by OFF */
"Nutritional Score UK (OFF)" = "Score nutritionnel Royaume-Uni (OFF)";

/* Header title of tableview section, indicating the websites for the product */
"Official product website" = "Site officiel du produit";

/* Header title of tableview section, indicating the edited website for the product */
"Official product website (edited)" = "Site officiel du produit (√©dit√©)";

/* Header title of tableview section, indicating the original website for the product */
"Official product website (non-edited)" = "Site officiel du produit (pas √©dit√©)";

/* String in button, to let the user indicate he wants to start the search. */
"OK" = "OK";

/* ViewController/row title, which allows the user to set his open food facts username. */
"Open Food Facts Preferences" = "Pr√©f√©rences Open Food Facts";

/* String for the Activity Action Screen */
"Open in Safari" = "Ouvrir dans Safari";

/* Description of the original tags in the json */
"Original" = "Original";

/* Gallery header text presenting the original images */
"Original Images" = "Images originaux";

/* Gallery header text presenting the edited original images */
"Original Images (edited)" = "Images originaux (√©dit√©)";

/* Gallery header text presenting the non-edited original images */
"Original Images (non-edited)" = "Images originaux (pas √©dit√©)";

/* Generic string to indicate the origins of the ingredients */
"Origins of ingredients" = "Origine ingr√©dients";

/* Generic string to indicate the edited origins of the ingredients */
"Origins of ingredients (edited)" = "Origine ingr√©dients (√©dit√©)";

/* Generic string to indicate the original (non-edited) origins of the ingredients */
"Origins of ingredients (non-edited)" = "Origine ingr√©dients (pas √©dit√©)";

/* Tableview section header, which list the detected other nutritional substances in an ingredients list.
   Tableview section header, which list the other nutritional substances in an ingredients list. */
"Other Nutritional Substances" = "Autre substances nutritionnelles";

/* String presented in a tagView if this is not the current product type */
"Other product type" = "Autre type de produit";

/* Generic string to indicate the packager codes. */
"Packager Code" = "Code emballeur";

/* Tableview sectionheader for packaging. */
"Packaging" = "Emballage";

/* Tableview sectionheader for packaging, edited version. */
"Packaging (edited)" = "Emballage (√©dit√©)";

/* Tableview sectionheader for packaging, interpreted version. */
"Packaging (interpreted)" = "Emballage (normalis√©)";

/* Tableview sectionheader for packaging, original version. */
"Packaging (non-edited)" = "Emballage (pas √©dit√©)";

/* String in textField placeholder, to show that the user has to enter his password */
"Password" = "Mot de passe";

/* Text of 1st segment of a SegmentedControl, indicating the model of the nutrient values, i.e. per standard 100g or 100 ml */
"Per 100 mg/ml" = "Par 100 mg/ml";

/* Text of 2nd segment of a SegmentedControl, indicating the model of the nutrient values, i.e. the values are indicated per serving */
"Per serving" = "Par portion";

/* Fraction of total by volume */
"percentage (%)" = "pourcentage (%)";

/* Header title of tableview section, indicating period after opening for beauty products */
"Period After Opening" = "P√©riode apr√®s ouverture";

/* Header title of tableview section, indicating period after opening for beauty products */
"Period After Opening (edited)" = "P√©riode apr√®s ouverture (√©dit√©)";

/* Header title of tableview section, indicating period after opening for beauty products */
"Period After Opening (non-edited)" = "P√©riode apr√®s ouverture (pas √©dit√©)";

/* Title in AlertViewController, which lets the user enter his username/password. */
"Personal Account" = "Compte personel";

/* Title of a segmented control. */
"Petfood" = "Animalier";

/* Placeholder string in a textfield to explain the purpose of a pet food barcode search */
"Petfood barcode." = "Code barre animalier";

/* Title of ViewController with a list of all food products that has been viewed. */
"Petfood Products" = "Produits pour animaux";

/* String in PickerViewController to indicate the photographer role of a contributor */
"Photographer" = "Photographe";

/* Text to show if the user selects the scan tab */
"Point the camera to the barcode of a product to recognize the product and get the product information." = "Pointez le cam√©ra vers le code barre du produit pour le faire reconna√Ætre et obtenir l'information du produit";

/* Text of a label, which explains the user to point the camera of his device to a barcode to start working (do not exceed 30 letters). */
"Point to a barcode to scan" = "Pointe le code barre d'un produit";

/* String in picker, which lets the user select the search result order. Order on the popularity. */
"Popularity" = "Popularit√©";

/* Tableview header section for the size of a portion */
"Portion size" = "Largeur portion";

/* Tableview header section for the edited size of a portion */
"Portion size (edited)" = "Largeur portion (√©dit√©)";

/* Tableview header section for the original size of a portion */
"Portion size (non-edited)" = "Largeur portion (pas √©dit√©)";

/* TableViewController title for the settings scene. */
"Preferences" = "R√©glages";

/* Description of the prefixed corrected tags */
"Prefix corrected" = "Pr√©fix corrig√©";

/* Tableview header for the section per unit shown, i.e. whether the nutrients are shown per 100 mg/ml or per portion. */
"Presentation format" = "Format de pr√©sentation";

/* Header for section of tableView with information of the producer (name, geographic location). */
"Producer" = "Producteur";

/* Header for section of tableView with information of the edited producer (name, geographic location). */
"Producer (edited)" = "Producteur (√©dit√©)";

/* Header for section of tableView with information of the original (non-edited) producer (name, geographic location). */
"Producer (non-edited)" = "Producteur (pas √©dit√©)";

/* Header for section of tableView with codes for the producer (EMB 123456 or FR.666.666). */
"Producer Codes" = "Code emballeur";

/* Header for section of tableView with codes for the edited producer (EMB 123456 or FR.666.666). */
"Producer Codes (edited)" = "Code emballeur (√©dit√©)";

/* Header for section of tableView with codes for the original producer (EMB 123456 or FR.666.666). */
"Producer Codes (non-edited)" = "Code emballeur (pas √©dit√©)";

/* Title of a segmented control. */
"Product" = "Produit";

/* Placeholder string in a textfield to explain the purpose of a product barcode search */
"Product barcode." = "Code barre du produit";

/* Title of a segment in a UISegmentedControl, which indicates that the values of the product are leading. */
"Product Defined" = "Produit d√©fini";

/* Alert message, when the product could not be retrieved from Internet. */
"Product does not exist. Add?" = "Le produit n'existe pas. L'ajouter?";

/* String presented in a tagView if the product has been loaded */
"Product is loaded" = "Produit charg√©";

/* String presented in a tagView if the product is updated */
"Product is updated" = "Produit chang√©";

/* Title of a segmented control segment, which lets the user set the default language of the new product tag entries as Product Language */
"Product Language" = "Langue du produit";

/* String presented in a tagView if the product list has been loaded */
"Product list is loaded" = "Produits charg√©s";

/* String presented in a tagView if the product is currently being loaded */
"Product loading" = "Chargement du produit en cours";

/* String presented in a tagView if the product loading has failed */
"Product loading failed" = "Echec du chargement du produit";

/* String in picker, which lets the user select the search result order. Order on the product names. */
"Product name" = "Nom du produit";

/* Secction title, to indicate the product name does not exist */
"Product name missing" = "Nom du produit manquant";

/* String presented in a tagView if no product is available on OFF */
"Product not available" = "Produit pas disponible";

/* String to indicate a product has not yet been retrieved from OFF yet and is only locally available */
"Product not loaded" = "Produit pas charg√©";

/* Title of a page to indicate that the product has not been set by the user. */
"Product not set" = "Produit non d√©fini";

/* Generic string to indicate the address (street/city/postalcode/country) where the product was bought */
"Purchase address" = "Adresse d'achat";

/* Generic string to indicate the address edited (street/city/postalcode/country) where the product was bought */
"Purchase address (edited)" = "Adresse d'achat (√©dit√©e)";

/* Generic string to indicate the address original (street/city/postalcode/country) where the product was bought */
"Purchase address (non-edited)" = "Adresse d'achat (pas √©dit√©e)";

/* Generic string to indicate the address edited (street/city/postalcode/country) where the product was bought */
"Purchase address (normalized)" = "Adresse d'achat (normalis√©e)";

/* Tableview sectionheader for size of package. */
"Quantity" = "Quantit√©";

/* Tableview sectionheader for the edited size of package. */
"Quantity (edited)" = "Quantit√© (√©dit√©)";

/* Tableview sectionheader for the original size of package. */
"Quantity (non-edited)" = "Quantit√© (pas √©dit√©)";

/* String in button, to let the user indicate he wants to cancel username/password input. */
"Reset application" = "R√©initialise l'appli";

/* String presented in a tagView if a response was received */
"Response received" = "R√©ponse re√ßue";

/* Header for section of tableView with names of the stores where the product is sold. */
"Sale Stores" = "Magasins de vente";

/* Title of first segment in switch, which lets the user select between salt or sodium */
"Salt" = "Sel";

/* Text of a label that wil indicate the fat level (low/medium/high) by colour. */
"Salt level" = "Taux de sel";

/* Product name of the product shown at first start */
"Sample Product for Demonstration, the globally known M&M's" = "Produit de d√©monstration, les M&Ms connu globalement";

/* Text of a label that will indicate the saturated fat level (low/medium/high) by colour. */
"Saturated Fat level" = "Taux de graisses satur√©es";

/* Title in cell with the saturated fat to all fat ratio */
"Saturated Fat to Total Fat ratio" = "Rapport Graisses Satur√©s sur Graisses Totals";

/* Title of a button in an alert sheet, which allows the user to save any changes to the local product */
"Save" = "Sauvegarde";

/* The title of an alert sheet, which allows the user to save he product. */
"Save Product Updates?" = "Sauvegarder?";

/* Title of the first tab of a tabbarVC */
"Scanner" = "Scanner";

/* Title of a tableview header, which shows the Nutrition Score and NOVA Value */
"Score Summary" = "Sommaire Nutri-Score";

/* Prefix of a title of a Tableview controller
   Title of the third Tabbar item of a TabBarVC, which alows he user to set up and perform OFF searches */
"Search" = "Cherche";

/* Title of a Tableview controller, indicating the tableview shows search beauty products. */
"Search Beauty Products" = "Cherche prod. de b√©aut√©";

/* Title of a Tableview controller, indicating the tableview shows search food products. */
"Search Food Products" = "Cherche prod. d'aliment.";

/* String show to explain the purpose of a search field in a tableview cell */
"Search in name, generic name, label, brand." = "Saisis un mot pour chercher dans nom, nom g√©n√©rique, label, marque";

/* String presented in a tagView if the search query is currently being loaded */
"Search loading" = "Chargement requete";

/* Title of a Tableview controller, indicating the tableview shows search pet food products (note the width of the title is constrained). */
"Search PetFood" = "Cherche prod. anim.";

/* Title of a Tableview controller, indicating the tableview shows search products. */
"Search Products" = "Cherche produits";

/* String presented in a tagView for the search query */
"Search query" = "D√©finition de requ√™te";

/* Part of a sentece indicating the number of search results */
"search results" = "r√©sultats de recherche";

/* Indicating that a search has been defined */
"Search set up" = "Requ√™te d√©finie";

/* String to indicate the text, which will be used to search multiple fileds of a product. */
"Search Text" = "Texte √† rechercher";

/* Title of a Tableview controller, indicating a search is in progress. */
"Searching" = "Cherchant";

/* Title of a viewcontroller where the user has to select an element in the picker. */
"Select" = "Choisis";

/* Text of a label in a page, when the user has not selected a product. */
"Select a product from the history." = "S√©lectionne produit de l'histoire";

/* Title of a picker row where the user has to select an element in the picker. */
"Select Completion Status" = "Saisir l'√©tat de compl√©tion";

/* Title of a viewcontroller where the user has to select a language in a pickerView list of languages. */
"Select language" = "S√©lectionner la langue";

/* First item in a pickerView, indicating what the user should do */
"Select role" = "Choisir le role";

/* Text of a tableview row, which allows the user to select diets */
"Select the diets, that you want the app to highlight in the product summary." = "S√©lectionne les r√©gimes, qui doivent mis en avant dans le sommaire du produit.";

/* Title of a tableview section with the selected categories for a product. */
"Selected Categories" = "Cat√©gories s√©lectionn√©s";

/* Title of a tableview section with the selected countries for a product. */
"Selected Countries" = "Pays s√©lectionn√©s";

/* Title of a tableview section, which allows the user to select diets */
"Selected Diets" = "R√©gimes s√©lection√©s";

/* Gallery header text presenting the selected front images */
"Selected Front Images" = "Photo du produit s√©lectionn√©es";

/* Gallery header text presenting the edited selected front images */
"Selected Front Images (edited)" = "Photo du produit s√©lectionn√©es (√©dit√©)";

/* Gallery header text presenting the non-edited selected front images */
"Selected Front Images (non-edited)" = "Photo du produit s√©lectionn√©es (non modifi√©es)";

/* Gallery header text presenting the selected ingredients images */
"Selected Ingredients Images" = "Photos d'ingr√©dients s√©lectionn√©es";

/* Gallery header text presenting the edited selected ingredients images */
"Selected Ingredients Images (edited)" = "Photos d'ingr√©dients s√©lectionn√©es (√©dit√©)";

/* Gallery header text presenting the non-edited selected ingredients images */
"Selected Ingredients Images (non-edited)" = "Photos d'ingr√©dients s√©lectionn√©es (non modifi√©es)";

/* Title of a tableview section with the selected languages for a product. */
"Selected Languages" = "Langues s√©lectionn√©s";

/* Gallery header text presenting the selected nutrition images */
"Selected Nutrition Images" = "Photos de nutrition s√©lectionn√©es";

/* Gallery header text presenting the edited selected nutrition images */
"Selected Nutrition Images (edited)" = "Photos de nutrition s√©lectionn√©es (modifi√©es)";

/* Gallery header text presenting the non-edited selected nutrition images */
"Selected Nutrition Images (non-edited)" = "Photos de nutrition s√©lectionn√©es (non modifi√©es)";

/* Title of a tableview section with the selected traces for a product. */
"Selected Traces" = "Traces s√©lectionn√©es";

/* Title of second segment in switch, which lets the user select between per standard unit (per 100 mg/ml / per serving / per daily value) */
"Serving" = "Portion";

/* Title of a segment in a segmentedControl indicating that the a search needs to be setup by tapping. */
"Set" = "D√©finir";

/* cell title label, which allows the user to set alerts for products elements (allergens, traces, ingredients, nurtiscore, nova, labels. */
"Set a warning for specific allergen(s)." = "D√©finir des alertes allerg√®nes/traces";

/* Title of second segment in switch, which  indicates the user can set another account */
"Set Account" = "D√©finir un compte";

/* Title of a tableView, in which a user can select rows (diets) to display. */
"Set Diets to Display" = "S√©lectionner le r√©gime √† montrer";

/* Title of a tableView section, which lets the user set warnings */
"Set ingredient warnings" = "D√©finir des alertes ingr√©dients";

/* Title of a viewController, which lets the user select product display options (salt vs sodium), kJoule or kcal, etc */
"Set preferences for salt/sodium, kJ/kcal/Cal, etc." = "D√©fini ";

/* TableView row label, which allows the user to set up the application. */
"Set product type (food/beauty/petFood), reset, etc." = "D√©finir le type de produit";

/* Row title, which allows the user to set his open food facts username. */
"Set your OpenFoodFacts account." = "D√©finir votre compte Open Food Facts";

/* Title of a tableview header  indicating that the corresding field has been set. */
"Setup query" = "D√©finir une recherche avanc√©e";

/* SegmentedControl index text for a preference setting, which ask the user to set the default for ingredient detections (additives, minerals etc). Should the app also show when nothing has been detected? */
"Show" = "Afficher";

/* Title of third segment in switch, which lets the user select between salt or sodium */
"Sodium" = "Sodium";

/* Header for a table section showing the special categories */
"Special categories" = "Cat√©gories sp√©ciales";

/* Title in AlertViewController, which lets the user enter his username/password. */
"Specify password" = "Saisir votre mot de passe";

/* Explanatory text in AlertViewController, which lets the user enter his username/password. */
"Specify your credentials for OFF" = "Nom et mot de passe pour OFF";

/* Title in AlertViewController, which lets the user decide if he wants to start a search. */
"Start Search?" = "Commencer la recherche?";

/* Generic string to indicate the stores where the product is sold. */
"Stores" = "Magasins";

/* Generic string to indicate the edited stores where the product is sold. */
"Stores (edited)" = "Magasins (modifi√©)";

/* Generic string to indicate the original (non-edited) stores where the product is sold. */
"Stores (non-edited)" = "Magasins (non modifi√©)";

/* Generic string to indicate the original (normalized) stores where the product is sold. */
"Stores (normalized)" = "Magasins (normalis√©)";

/* Text of a label that will indicate the sugar level (low/medium/high) by colour. */
"Sugar level" = "Taux de sucres";

/* Title for the view controller with information about the Supply Chain (origin ingredients, producer, shop, locations). */
"Supply Chain" = "Circuit logistique";

/* Alert title, to indicate product should be added */
"Sure" = "OK";

/* Title of a segmented control segment, which lets the user set the default language of the new product tag entries as System Language */
"System Language" = "Langue du syst√®me";

/* Title of a tableView section, which lets the user set the default language of the new product tag entries */
"Tag Entry Language" = "Langue pour les tags";

/* String of a button which urges the user to take photos of the (new) product. */
"Take Photos" = "Prendre des Photos";

/* The title of an alert sheet, which allows the user to save he product. */
"The local product has been changed. Should these changes be saved?" = "Le produit local a chang√©. Sauvegarder les changements?";

/* String, which urges the user to take photos of the (new) product. */
"This barcode is not yet listed on OFF. Please take some photos, so the data can be added." = "Ce code-barres n'est pas encore r√©pertori√© sur OFF. Veuillez prendre quelques photos, afin que les donn√©es puissent √™tre ajout√©es.";

/* An explanatory text in the common name field. */
"This sample product shows you how a product is presented. Slide to the following pages, in order to see more product details. Once you start scanning barcodes, you will no longer see this sample product." = "Ce produit de d√©monstration vous montre comment une produit est pr√©sent√©. Passez au pages suivants pour voir plus de d√©tails sur le produit. Quand vous commencez √† scanner, ce produit sera supprim√©.";

/* Text to indicate the traces of a product. */
"Traces" = "Traces";

/* Text to indicate the edited traces of a product. */
"Traces (edited)" = "Traces (modifi√©es)";

/* Text to indicate the original (un-edited) traces of a product. */
"Traces (non-edited)" = "Traces (mon modifi√©es)";

/* Text to indicate the original (normalized) traces of a product. */
"Traces (normalized)" = "Traces (normalis√©es)";

/* Text to indicate the original (normalized) traces of a product. */
"Traces (translated)" = "Traces (traduites)";

/* Description of the interpreted tags in the json as translated by the taxonomy */
"Translated" = "Traduit";

/* String (in Segmented Control/Tag) to indicate the nutritional score level is undefined (and will not be used in the search) */
"Undefined" = "Non d√©fini";

/* Text in a TagListView, when the field in the json was not present. */
"Unknown" = "Inconnu";

/* Title of a tableview section with a list of categories that can be selected. */
"Unselected Categories" = "Cat√©gories √† selectioner";

/* Title of a tableview section with a list of countries that can be selected. */
"Unselected Countries" = "Pays √† selectioner";

/* Title of a tableview section with a list of languages that can be selected. */
"Unselected Languages" = "Langues √† selectioner";

/* Title of a tableview section with a list of traces that can be selected. */
"Unselected Traces" = "Traces √† selectioner";

/* String presented in a tagView if an image is being uploaded */
"Uploading image" = "Chargement de l'image‚Ä¶";

/* String of a button, to prefill the nutrients with the standard US set. */
"US Set" = "US";

/* Title of a button in a navigation bar, which allows the user to adapt an image and use the result. */
"Use" = "Utiliser";

/* Title of a button to indicate that user can take an image with the Camera. */
"Use Camera" = "Utiliser l'appareil photo";

/* Title of a button to indicate that user can pick an image from Photos. */
"Use Photos" = "Utiliser la gallerie";

/* Title of a segment in a segmentedControl that this parameter will be set by the user. */
"User defined" = "D√©fini par l'utilisateur";

/* ViewController/row title, which allows the user to set the application preferences. */
"User Preferences" = "Pr√©f√©rences";

/* String in textField placeholder, to show that the user has to enter his username. */
"Username" = "Nom du compte";

/* Title of a tableView section, which lets the user set the view toggle mode interface (double tap or button) */
"View Toggle Mode" = "Mode de changement affichage";

