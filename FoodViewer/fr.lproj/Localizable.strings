/* a warning to check the brackets used, they are unbalanced */
" (WARNING: check brackets, they are unbalanced)" = "(Avertissement: contrôlez les accolades, il manque une)";

/* A list of countries seperated by a comma. */
"%@" = "%@";

/* Cell text for the total number of nutritional facts available. */
"%@ nutritional facts specified" = "%@ faits nutritionnels spécifiés";

/* A separator of a list of countries. ADD A TRAILING SPACE */
", " = ", ";

/* Title of first segment in switch, which lets the user select between per standard unit (per 100 mg/ml / per serving / per daily value) */
"100 mg/ml" = "100 mg/ml";

/* A sepator between sentence parts.  ADD A TRAILING SPACE. */
"; " = "; ";

/* Text when no value for nutritional facts have been specified. */
"?" = "?";

/* Title of a navigationBar to add languages */
"Add Language" = "Ajout langue";

/* Title of a button in normal state allowing the user to add a nutrient */
"Add Nutrient" = "Ajout nutriment";

/* Header title for the product additives section, i.e. the additives are derived from the ingredients list. */
"Additives" = "Additives";

/* TableViewController title for the allergen warnings setting scene. */
"Allergen warnings" = "Avertissements allergènes";

/* Header title for the product allergens section, i.e. the allergens derived from the ingredients.
   Text to indicate the allergens of a product. */
"Allergens" = "Allergènes";

/* Text to indicate the number of categories the product belongs to. */
"Assigned to %@ categories" = "Assignés à %@ catégories";

/* Text to indicate the product belongs to ONE category. */
"Assigned to 1 category" = "Assign à 1 catégorie";

/* Explanatory text in AlertViewController, which lets the user enter his username/password. */
"Authentication with TouchID failed. Specify your password" = "Authentication avec TouchID échoué, spécifie ton mot de passe:";

/* Header for a table section showing the appreciations of the bad nutrients */
"Bad nutrients" = "Mauvais nutriments";

/* Tableview sectionheader for Barcode */
"Barcode" = "Code barre";

/* Title of ViewController with a list of all food products that has been viewed. */
"Beauty Products" = "Beauté";

/* Cell title indicating the product belongs to the beverages category */
"Beverages category" = "Bon nutriments";

/* Tableview sectionheader for brands. */
"Brands" = "Marques";

/* Title of second segment in switch, which lets the user select between joule or calories */
"Calories" = "Calories";

/* Popover which allows to select an image. Title for barButton to cancel the selection
   String in button, to let the user indicate he wants to cancel username/password input. */
"Cancel" = "Annule";

/* Header title for table section with product Categories
   Text to indicate the product belongs to a category.
   Title of ViewController with the categories the product belongs to.
   Viewcontroller title for page with categories for product. */
"Categories" = "Catégories";

/* Cell title indicating the product belongs to the cheeses category */
"Cheeses category" = "Catégorie fromages";

/* Title of a button, which removes all ites in the product search history. */
"Clear History" = "Efface histoire";

/* Tableview sectionheader for long product name */
"Common Name" = "Dénomination générique";

/* Title of view controller, with information on the community that has contributed to the product data.
   Viewcontroller title for page with community effort for product. */
"Community Effort" = "Effort communauté";

/* Header title of the tableview section, indicating whether the productdata is complete. */
"Completeness" = "Exhaustivité";

/* Label for a horizontal gauge that indicates the completion percentage of the product data. */
"Completion" = "Taux de complèté";

/* Header title of the tableview section, indicating whether which users did contribute. */
"Contributors" = "Contributeurs";

/* Header title of the tableview section, indicating when the product data was created. */
"Creation Date" = "Date création";

/* Title of third segment in switch, which lets the user select between per daily value (per 100 mg/ml / per serving / per daily value) */
"Daily Value" = "Valeur journalière";

/* Description for NutritionData Daily Value per serving */
"Daily Values (per serving)" = "Apport Journ.";

/* Text to indicate how much the product data is filled in (available). */
"Data is %@ complete" = "Produit est %@ complète";

/* String presented in a tagView if the data has been loaded */
"Data is loaded" = "Data chargé";

/* Title of a tableView section, which lets the user select display options */
"Display Prefs" = "Réglage afiichage";

/* String in button, to let the user indicate he is ready with username/password input. */
"Done" = "Fini";

/* Title of viewcontroller which allows editing of the product in a webview. */
"Edit" = "Edité";

/* Title of view controller, which allows editing of the nutrients */
"Edit Nutrient" = "Modifie nutriment";

/* Placeholder text for field where user should enter a city name. */
"Enter city name" = "Nom de la ville";

/* Placeholder text for field where user should enter a country name. */
"Enter country name" = "Nom du pays";

/* Placeholder text for field where user should enter a postal code. */
"Enter postal code" = "Code postal";

/* Placeholder text for field where user should enter a shop name. */
"Enter shop name" = "Nom du magasin";

/* Placeholder text for field where user should enter a street name. */
"Enter street name" = "Nom de la rue";

/* Error message when the json input file does not contain any information */
"Error: No result status in JSON" = "Erreur: pas de result status in json";

/* No valid data has been received */
"Error: No valid data" = "Erreur: pas de données valides";

/* The JSON file is wrongly formatted. */
"Error: No verbose status" = "Erreur: pas de status verbose in json";

/* A JSON status which is not supported. */
"Error: Other (>1) result status" = "Erreur: autre (>1) result status in json";

/* Probably a programming error. */
"Error: URL encoding failed" = "Erreur: encodage URL échoué";

/* Probably a programming error. */
"Error: URL is wrong somehow" = "Erreur: URL mal-formé";

/* Retrieved a json file that is no longer relevant for the app. */
"Error: URL not matched" = "Erreur: URL n'est plus rélévant";

/* Error to indicate that a file can not be read. */
"Error: file %@ not available" = "Erreur: fichier %@ pas disponible";

/* Header title of the tableview section, indicating the most recent expiration date. */
"Expiration Date" = "Date limite d'utilisation";

/* Header for Tableview section with product expiry date */
"Expiry Date" = "Date Lime d'Utilisation";

/* Title of ViewController with a list of all food products that has been viewed. */
"Food Products" = "Alimentaire";

/* Header for a table section showing the appreciations of the good nutrients */
"Good nutrients" = "Bons nutriments";

/* Title for the view controller with the product image, title, etc.
   Viewcontroller title for page with product identification info. */
"Identification" = "Identification";

/* Title for the viewcontroller with an enlarged image
   Title for the ViewController with the image of the product ingredients.
   Title of the ViewController with package image of the nutritional values */
"Image" = "Photo";

/* String presented in a tagView if the image is available */
"Image is available" = "Image disponible";

/* String presented in a tagView if the image is currently being loaded */
"Image is being loaded" = "Chargement photo active";

/* String presented in a tagView if the image loading has failed */
"Image loading has failed" = "Chargement photo échoué";

/* String presented in a tagView if the image data contained no data */
"Image was empty" = "Photo vide";

/* Header title for the product ingredients section.
   Text to indicate the ingredients of a product.
   Title for the ViewController with the product ingredients.
   Viewcontroller title for page with ingredients for product. */
"Ingredients" = "Ingrédients";

/* Header title for the ingredients image section, i.e. the image of the package with the ingredients */
"Ingredients Image" = "Photo de la liste des ingrédients";

/* String presented in a tagView if nothing has happened yet */
"Initialized" = "Initialisé";

/* Title of first segment in switch, which lets the user select between joule or calories */
"Joule" = "Joule";

/* Energy unit */
"Joule (J)" = "Joule (J)";

/* Header title for the product labels section, i.e. images, logos, etc. */
"Labels" = "Labels, certifications, récompenses";

/* Header title of the tableview section, indicating when the product data was last edited. */
"Last edit Date" = "Dernière date de modif.";

/* Label to indicate whether any nutrients are indicated on the package */
"Listed on package?" = "Noté sur l'emballage?";

/* Text to indicate that the it is trying to load. */
"Loading product" = "Chargement produit";

/* Tableview sectionheader for main image of package. */
"Main Image" = "Photo du produit";

/* Title of a navigationBar with the main language */
"Main Language" = "Langue principale";

/* Header for section of tableView with a map of producer, origin and shop locations. */
"Map" = "Carte";

/* Title of a navigation bar, wich allows the user to adapt an image.
   Title of a toolbar of a popOver, wich allows the user to adapt an image. */
"Move/Scale" = "Bouge/adapte";

/* Tableview sectionheader for product name */
"Name" = "Nom du produit";

/* String in pickerView if no purchase shops are defined */
"No Favorites defined" = "Pas des favoris définié";

/* Text in a tableview cell, when no brands are available in the product data. */
"No brands indicated" = "Aucun marque indiqué";

/* Text to indicate that No categories have been specified in the product data. */
"No categories specified" = "Aucun catégorie indiqué ";

/* String if no common name is available */
"No common name available" = "Nom generique pas disponible";

/* Title of cell when no expiration date is avalable */
"No expiration date" = "DLU pas disponible";

/* String presented in a tagView if no image is available */
"No image available" = "Photo pas disponible";

/* Text to indicate that no ingredients are present in the product data. */
"No ingredients listed" = "Aucun ingrédient indiqué";

/* String if no name is available */
"No name available" = "Pas de nom disponible";

/* Text of Label, indicating that the product has no nutrients defined */
"No nutrients" = "Pas de nutriments";

/* Text to indicate that no product is defined/setup. */
"No product defined" = "Pas de produit défini";

/* Text in header of section, indicating that the product name is missing. */
"No product name" = "Pas un nom du produit disponible";

/* Text to indicate that the history of products is empty. */
"No products listed" = "Pas de produits spécifiés";

/* String if no quantity is available */
"No quantity available" = "Pas des quantités disponible";

/* Text to indicate that no supply chain infor (origin, producer, etc.) are available. */
"No supply chain info" = "Pas de chaine défini";

/* Title for viewcontroller with detailed product images, when no title is given. */
"No title" = "Pas de titre";

/* Text in a pickerView, when no translated text is available */
"No translation" = "Pas de traduction";

/* Alert title, to indicate product should NOT be added */
"Nope" = "Beuh";

/* Tableview header for the section with nutriments availability, i.e. whether the nutrients are on the package. */
"Nutriments Availability" = "Disponibilité nutriments";

/* Tableview header section for the list of nutritional facts
   Text to indicate the nutrition facts of a product.
   Title of the ViewController with the nutritional values */
"Nutrition Facts" = "Composition nutritionnelle";

/* Description for NutritionData per standard unit */
"Nutrition Facts (per 100g/100ml)" = "Comp. nutritionelle (par 100g/100ml)";

/* Description for NutritionData per serving */
"Nutrition Facts (per serving)" = "Comp. nutritionelle (par portion)";

/* Tableview header section for the image of the nutritional facts */
"Nutrition Facts Image" = "Photo des inform. nutritionnelles";

/* Viewcontroller title for page with explanation of the nutritional score of the product. */
"Nutritional Score" = "Score Nutritionelle";

/* Header for a table section showing the total results France */
"Nutritional Score France" = "Score Nutritionelle France";

/* Header for a table section showing the total results UK */
"Nutritional Score UK" = "Score Nutritionelle UK";

/* Viewcontroller title for page with nutritional facts for product. */
"Nutritional facts" = "Inform. nutritionnelles";

/* String for the Activity Action Screen */
"Open in Safari" = "Ouvre dans Safari";

/* Title of a tableView section, which lets the user set the off account to use */
"OpenFoodFacts Account" = "Compte OpenFoodFacts";

/* Header for section of tableView with location(s) of ingredients. */
"Origin ingredient" = "Origine des ingrédients";

/* String presented in a tagView if this is not the current product type */
"Other product type" = "Autre type de produit";

/* Tableview sectionheader for packaging. */
"Packaging" = "Emballage";

/* String in textField placeholder, to show that the user has to enter his password */
"Password" = "Mot de passe";

/* Text of 1st segment of a SegmentedControl, indicating the model of the nutrient values, i.e. per standard 100g or 100 ml */
"Per 100 mg/ml" = "Par 100 mg/ml";

/* Text of 2nd segment of a SegmentedControl, indicating the model of the nutrient values, i.e. the values are indicated per serving */
"Per serving" = "Par portion";

/* Header title of tableview section, indicating period after opening for beauty products */
"Period After Opening" = "Période après ouverture";

/* Title in AlertViewController, which lets the user enter his username/password. */
"Personal Account" = "Compte personel";

/* Title of ViewController with a list of all food products that has been viewed. */
"Petfood Products" = "Animaux";

/* TableViewController title for the settings scene. */
"Preferences" = "Réglages";

/* Tableview header for the section per unit shown, i.e. whether the nutrients are shown per 100 mg/ml or per portion. */
"Presentation format" = "Format de présentation";

/* Text to indicate the producer of the product.  ADD A TRAILING SPACE. */
"Produced in/by %@; " = "Produit par/en %@; ";

/* Header for section of tableView with codes for the producer (EMB 123456 or FR.666.666). */
"Producer Codes" = "Codes emballeurs";

/* Header for section of tableView with information of the producer (name, geographic location). */
"Producers" = "Producteurs";

/* Header title of tableview section, indicating the websites for the product */
"Product Websites" = "Sites produit";

/* Alert message, when the product could not be retrieved from Internet. */
"Product does not exist. Add?" = "Produit n'existe pas. Ajouter?";

/* String presented in a tagView if the product has been loaded */
"Product is loaded" = "Produit chargé";

/* String presented in a tagView if the product is currently being loaded */
"Product loading" = "En cours de charger produit";

/* String presented in a tagView if the product loading has failed */
"Product loading  failed" = "Chargement produit échoué";

/* String presented in a tagView if no product is available on OFF */
"Product not available" = "Produit pas disponible";

/* Where do I use this? */
"Product update failed" = "Maj produit échoué";

/* Where do I use this? */
"Product update succeeded" = "Maj produit réussi";

/* Title of ViewController with a list of all products that has been viewed. */
"Products" = "Produits";

/* Header for Tableview section with product purchase location date */
"Purchase Location" = "Endroit d'achat";

/* Header for section of tableView with Locations where the product was bought. */
"Purchase Locations" = "Endroits d'achat";

/* Tableview sectionheader for size of package. */
"Quantity" = "Quantité";

/* String in button, to let the user indicate he wants to cancel username/password input.
   Title of a tableView section, which lets the user reset the history */
"Reset" = "Réinitialise";

/* Header for section of tableView with names of the stores where the product is sold. */
"Sale Stores" = "Magasins de vente";

/* Header for section of tableView with Countries where the product is sold. */
"Sales Countries" = "Pays de vente";

/* Text to indicate the sales countries of a product. */
"Sales countries" = "Pays de vente";

/* Title of first segment in switch, which lets the user select between salt or sodium */
"Salt" = "Sel";

/* Product name of the product shown at first start */
"Sample Product for Demonstration, the globally known M&M's" = "Produit de démonstration, les M&Ms connu globalement";

/* Title in cell with the saturated fat to all fat ratio */
"Saturated Fat to Total Fat ratio" = "Rapport Graisses Saturés sur Graisses Totals";

/* First element of a pickerView, where the user has to select a language.
   First element of a pickerView, where the user has to select a nutrient. */
"Select" = "Choisis";

/* Title of view controller, which allows the adding of a nutrient */
"Select Nutrient" = "Sélectionne nutriment";

/* Title of second segment in switch, which lets the user select between per standard unit (per 100 mg/ml / per serving / per daily value) */
"Serving" = "Portion";

/* Tableview header for the section with the serving size, i.e. the amount one will usually take of the product. */
"Serving Size" = "Portion";

/* Title of second segment in switch, which  indicates the user can set another account */
"Set Account" = "Défini compte";

/* String in pickerView if the purchase shop is not known */
"Shop unknown" = "Magasin inconnu";

/* Title of third segment in switch, which lets the user select between salt or sodium */
"Sodium" = "Sodium";

/* Text to indicate the first shop the product is sold in.  ADD A TRAILING SPACE. */
"Sold by %@" = "Vendu par %@";

/* Text to introduce where the product is sold.  ADD A TRAILING SPACE. */
"Sold in " = "Vendu en ";

/* Header for a table section showing the special categories */
"Special categories" = "Catégories speciaux";

/* Title in AlertViewController, which lets the user enter his username/password. */
"Specify password" = "Spécifie mot de passe";

/* Explanatory text in AlertViewController, which lets the user enter his username/password. */
"Specify your credentials for OFF?" = "Spécifie compte et mot de passe pour OFF";

/* Title for the view controller with information about the Supply Chain (origin ingredients, producer, shop, locations).
   Viewcontroller title for page with supply chain for product. */
"Supply Chain" = "Circuit logistique";

/* Alert title, to indicate product should be added */
"Sure" = "Dac";

/* Text to indicate the number of ingredients in the product. */
"There are %@ ingredients" = "Il y a %@ ingrédients";

/* Text to indicate that there is one ingredient in the product. */
"There is 1 ingredient" = "Il y a 1 ingrédient";

/* An explanatory text in the common name field. */
"This sample product shows you how a product is presented. Slide to the following pages, in order to see more product details. Once you start scanning barcodes, you will no longer see this sample product." = "Ce produit de démonstration vous montre comment une produit est présenté. Passez au pages suivants pour voir plus de détails sur le produit. Quand vous commencez à scanner, ce produit sera supprimé.";

/* Header title for the product traces section, i.e. the traces are from products which are worked with in the factory and are indicated separate on the label.
   Text to indicate the traces of a product. */
"Traces" = "Traces";

/* String presented in a tagView if an image is being uploaded */
"Uploading image" = "Charger image";

/* Popover which allows to select an image. Title for barButton to use a selected image
   Title of a button in a navigation bar, which allows the user to adapt an image and use the result. */
"Use" = "Utilise";

/* String in textField placeholder, to show that the user has to enter his username. */
"Username" = "Nom du compte";

/* Title of a tableView section, which lets the user set warnings */
"Warnings" = "Avertissements";

/* Text in a TagListView, when tags are available the product data. */
"available" = "disponible";

/* Title of first segment in switch, which indicates the foodviewer account will be used for edits */
"foodviewer" = "foodviewer";

/* Standard weight unit. */
"gram (g)" = "gramme (g)";

/* Energy unit. */
"kcalories (kcal)" = "calories (kcal)";

/* Standard weight unit divided by million. */
"microgram (µm)" = "microgramme (µm)";

/* Standard weight unit divided by thousand. */
"milligram (mg)" = "milligramme (mg)";

/* Value of the creation date field, if no valid date is available. */
"no creation date available" = "pas de date de création disponible";

/* Value of the edit date field, if no valid date is available. */
"no edit date available" = "pas de date d'édition disponible";

/* Text in a TagListView, when no ingredients are available in the product data. */
"no ingredients specified" = "pas d'ingrédients spécifiés";

/* Text for language of product, when there is no language defined. */
"no language defined" = "pas de langue défini";

/* Text for productname, when no productname is available in the product data. */
"no name specified" = "pas de nom spécifié";

/* Text in a TagListView, when no nutrition data has been specified in the product data. */
"no nutrition data available" = "pas d'info nutritionnelles spécifiés";

/* Text in a TagListView, when no nutrition data has been specified in the product data. */
"no nutrition data indicated" = "pas d'info nutritionnelles spécifiés";

/* description() text if the nutrition data on the package is indicated per standard unit (100 g or 100 ml). */
"no nutrition data indicated per standard unit" = "info nutritionnelle indiqué par unité standard";

/* Text for an entry in a taglist, when no serving size is available. This is also indicated in a separate colour. */
"no serving size available" = "pas de portion spécifié";

/* tag of cell when no tags are available
   Text for a cell, when no status title has been provided, such as 'completed', etc.
   Text for language of product, when there is no language defined.
   Text in a TagListView, when the json provided an empty string.
   Unitless */
"none" = "aucun";

/* TextField text to indicate the serving size is not available */
"not available" = "pas disponible";

/* description() text if the nutrition data on the package is indicated per serving. */
"nutrition data indicated per serving" = "info nutritionnelle indiqué par portion";

/* Text in a TagListView, when no nutrition data is available on the package. */
"nutrition data not on package" = "pas de valeurs nutri sur emballage";

/* Text in a TagListView, when the nutrition data has been specified in the product data. */
"nutrition data per serving and standard unit available" = "info nutritionnelle disponible par portion et unité standard";

/* Text in a TagListView, when the nutrition data has been specified in the product data. */
"nutrition data per serving available" = "info nutritionnelle disponible par portion";

/* Text in a TagListView, when the nutrition data has been specified in the product data. */
"nutrition data per standard unit available" = "info nutritionnelle disponible par unité standard";

/* Fraction of total by volume */
"percentage (%)" = "pourcentage (%)";

/* tag of cell when no date was in off
   Text to indicate the product has no allergens defined.
   Text to indicate the product has no categories defined.
   Text to indicate the product has no ingredients defined.
   Text to indicate the product has no sales countries defined.
   Text to indicate the product has no traces defined. */
"undefined" = "non défini";

/* Text in a TagListView, when the field in the json was empty. */
"unknown" = "inconnu";

/* Image to indicate that the user who created the product. */
"❤️" = "❤️";

/* Image to indicate that the user who added information to the product. */
"💭" = "💭";

/* Image to indicate that the user who added or deleted information of the product. */
"📝" = "📝";

/* Image to indicate that the user took pictures of the product. */
"📷" = "📷";

/* Image to indicate that the user modified information of the product. */
"🔦" = "🔦";

